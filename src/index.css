
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 210 11% 10%;
    --foreground: 120 100% 95%;

    --card: 210 11% 12%;
    --card-foreground: 120 100% 95%;

    --popover: 210 11% 12%;
    --popover-foreground: 120 100% 95%;

    --primary: 120 100% 53%;
    --primary-foreground: 0 0% 0%;

    --secondary: 210 11% 15%;
    --secondary-foreground: 120 100% 95%;

    --muted: 210 11% 15%;
    --muted-foreground: 120 20% 70%;

    --accent: 120 100% 53%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 210 11% 20%;
    --input: 210 11% 20%;
    --ring: 120 100% 53%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-dark-bg-900 text-foreground font-sans;
    cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'><rect x='9' y='0' width='2' height='20' fill='%2339ff14'/><rect x='0' y='9' width='20' height='2' fill='%2339ff14'/></svg>"), crosshair;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #1a1a1a;
  }

  ::-webkit-scrollbar-thumb {
    background: #39ff14;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #00ff00;
  }
}

@layer components {
  .typing-animation {
    overflow: hidden;
    border-right: 2px solid #39ff14;
    white-space: nowrap;
    animation: typing 3s steps(20) 1s both, blink 1s step-end infinite;
  }

  .matrix-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent 0%, #39ff14 50%, transparent 100%);
    opacity: 0.03;
    pointer-events: none;
  }

  .project-card {
    @apply bg-card border border-border rounded-lg p-6 transition-all duration-300 hover:border-hacker-green-400 hover:shadow-lg hover:shadow-hacker-green-400/20;
  }

  .nav-link {
    @apply text-foreground hover:text-hacker-green-400 transition-colors duration-200 font-mono;
  }

  .section-title {
    @apply text-3xl md:text-4xl font-bold font-mono text-hacker-green-400 mb-8;
  }

  /* Updated cursor hover effect - small solid dot */
  .cursor-hover-effect {
    cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'><rect x='9' y='0' width='2' height='20' fill='%2339ff14'/><rect x='0' y='9' width='20' height='2' fill='%2339ff14'/></svg>"), crosshair;
  }

  .cursor-hover-effect:hover {
    cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'><circle cx='10' cy='10' r='4' fill='%2339ff14'/></svg>"), pointer;
  }

  .glitch-text {
    position: relative;
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch-text::before {
    animation: glitch-1 0.5s infinite;
    color: #ff0040;
    z-index: -1;
  }

  .glitch-text::after {
    animation: glitch-2 0.5s infinite;
    color: #00ffff;
    z-index: -2;
  }

  @keyframes glitch-1 {
    0%, 100% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
  }

  @keyframes glitch-2 {
    0%, 100% {
      transform: translate(0);
    }
    20% {
      transform: translate(2px, 2px);
    }
    40% {
      transform: translate(2px, -2px);
    }
    60% {
      transform: translate(-2px, 2px);
    }
    80% {
      transform: translate(-2px, -2px);
    }
  }
}
